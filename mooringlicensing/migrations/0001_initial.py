# Generated by Django 3.2.16 on 2022-12-08 01:22

import ckeditor.fields
import dirtyfields.dirtyfields
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mooringlicensing.components.approvals.models
import mooringlicensing.components.compliances.models
import mooringlicensing.components.proposals.models
import smart_selects.db_fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdmissionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(choices=[('landing', 'Landing'), ('extended_stay', 'Extended stay'), ('not_landing', 'Not landing'), ('approved_events', 'Approved events')], default='landing', max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='AgeGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(choices=[('adult', 'Adult'), ('child', 'Child')], default='adult', max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='AmendmentReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=125, verbose_name='Reason')),
            ],
            options={
                'verbose_name': 'Application Amendment Reason',
                'verbose_name_plural': 'Application Amendment Reasons',
            },
        ),
        migrations.CreateModel(
            name='ApplicationFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('send_invoice', models.BooleanField(default=False)),
                ('confirmation_sent', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('expiry_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('payment_type', models.SmallIntegerField(choices=[(0, 'Internet booking'), (1, 'Reception booking'), (2, 'Black booking'), (3, 'Temporary reservation')], default=0)),
                ('cost', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('invoice_reference', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('system_invoice', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=30, null=True, unique=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('fee_by_fee_constructor', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Oracle code',
            },
        ),
        migrations.CreateModel(
            name='Approval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lodgement_number', models.CharField(blank=True, max_length=9, unique=True)),
                ('status', models.CharField(choices=[('current', 'Current'), ('expired', 'Expired'), ('cancelled', 'Cancelled'), ('surrendered', 'Surrendered'), ('suspended', 'Suspended'), ('fulfilled', 'Fulfilled')], default='current', max_length=40)),
                ('internal_status', models.CharField(blank=True, choices=[('waiting', 'Waiting for offer'), ('offered', 'Mooring Licence offered'), ('submitted', 'Mooring Licence application submitted')], max_length=40, null=True)),
                ('renewal_sent', models.BooleanField(default=False)),
                ('issue_date', models.DateTimeField()),
                ('wla_queue_date', models.DateTimeField(blank=True, null=True)),
                ('original_issue_date', models.DateField(auto_now_add=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('surrender_details', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('suspension_details', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('submitter', models.IntegerField(blank=True, null=True)),
                ('proxy_applicant', models.IntegerField(blank=True, null=True)),
                ('extracted_fields', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('cancellation_details', models.TextField(blank=True)),
                ('extend_details', models.TextField(blank=True)),
                ('cancellation_date', models.DateField(blank=True, null=True)),
                ('set_to_cancel', models.BooleanField(default=False)),
                ('set_to_suspend', models.BooleanField(default=False)),
                ('set_to_surrender', models.BooleanField(default=False)),
                ('renewal_count', models.PositiveSmallIntegerField(default=0, verbose_name='Number of times an Approval has been renewed')),
                ('migrated', models.BooleanField(default=False)),
                ('expiry_notice_sent', models.BooleanField(default=False)),
                ('exported', models.BooleanField(default=False)),
                ('wla_order', models.PositiveIntegerField(help_text='wla order per mooring bay', null=True)),
                ('vessel_nomination_reminder_sent', models.BooleanField(default=False)),
                ('reissued', models.BooleanField(default=False)),
                ('export_to_mooring_booking', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ApprovalDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.approvals.models.update_approval_doc_filename)),
                ('can_delete', models.BooleanField(default=True)),
                ('approval', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mooringlicensing.approval')),
            ],
        ),
        migrations.CreateModel(
            name='CommunicationsLogEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to', models.TextField(blank=True, verbose_name='To')),
                ('fromm', models.CharField(blank=True, max_length=200, verbose_name='From')),
                ('cc', models.TextField(blank=True, verbose_name='cc')),
                ('type', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone Call'), ('mail', 'Mail'), ('person', 'In Person'), ('onhold', 'On Hold'), ('onhold_remove', 'Remove On Hold'), ('with_qaofficer', 'With QA Officer'), ('with_qaofficer_completed', 'QA Officer Completed'), ('referral_complete', 'Referral Completed')], default='email', max_length=35)),
                ('reference', models.CharField(blank=True, max_length=100)),
                ('subject', models.CharField(blank=True, max_length=200, verbose_name='Subject / Description')),
                ('text', models.TextField(blank=True)),
                ('customer', models.IntegerField(null=True)),
                ('staff', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='CompanyOwnership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('approved', 'Approved'), ('draft', 'Draft'), ('old', 'Old'), ('declined', 'Declined')], default='draft', max_length=50)),
                ('percentage', models.IntegerField(blank=True, null=True)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(null=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Company Ownership',
            },
        ),
        migrations.CreateModel(
            name='Compliance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lodgement_number', models.CharField(blank=True, default='', max_length=9)),
                ('due_date', models.DateField()),
                ('text', models.TextField(blank=True)),
                ('num_participants', models.SmallIntegerField(blank=True, null=True, verbose_name='Number of participants')),
                ('processing_status', models.CharField(choices=[('due', 'Due'), ('overdue', 'Overdue'), ('future', 'Future'), ('with_assessor', 'With Assessor'), ('approved', 'Approved'), ('discarded', 'Discarded')], max_length=20)),
                ('customer_status', models.CharField(choices=[('due', 'Due'), ('overdue', 'Overdue'), ('future', 'Future'), ('with_assessor', 'Under Review'), ('approved', 'Approved'), ('discarded', 'Discarded')], max_length=20)),
                ('assigned_to', models.IntegerField(blank=True, null=True)),
                ('lodgement_date', models.DateTimeField(blank=True, null=True)),
                ('submitter', models.IntegerField(blank=True, null=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('post_reminder_sent', models.BooleanField(default=False)),
                ('fee_invoice_reference', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('approval', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='compliances', to='mooringlicensing.approval')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceAmendmentReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=125, verbose_name='Reason')),
            ],
        ),
        migrations.CreateModel(
            name='CompRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('text', models.TextField(blank=True)),
                ('officer', models.IntegerField(blank=True, null=True)),
                ('compliance', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mooringlicensing.compliance')),
            ],
        ),
        migrations.CreateModel(
            name='DcvAdmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitter', models.IntegerField(blank=True, null=True)),
                ('lodgement_number', models.CharField(blank=True, max_length=10, unique=True)),
                ('lodgement_datetime', models.DateTimeField(blank=True, null=True)),
                ('skipper', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DcvAdmissionArrival',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arrival_date', models.DateField(blank=True, null=True)),
                ('departure_date', models.DateField(blank=True, null=True)),
                ('private_visit', models.BooleanField(default=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('dcv_admission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dcv_admission_arrivals', to='mooringlicensing.dcvadmission')),
            ],
        ),
        migrations.CreateModel(
            name='DcvOrganisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('abn', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='ABN')),
            ],
        ),
        migrations.CreateModel(
            name='DcvPermit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitter', models.IntegerField(blank=True, null=True)),
                ('lodgement_number', models.CharField(blank=True, max_length=10, unique=True)),
                ('lodgement_datetime', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('renewal_sent', models.BooleanField(default=False)),
                ('migrated', models.BooleanField(default=False)),
                ('dcv_organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.dcvorganisation')),
            ],
        ),
        migrations.CreateModel(
            name='FeeConstructor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incur_gst', models.BooleanField(default=True)),
                ('enabled', models.BooleanField(default=True)),
                ('application_type', models.ForeignKey(limit_choices_to={'fee_by_fee_constructor': True}, on_delete=django.db.models.deletion.PROTECT, to='mooringlicensing.applicationtype')),
            ],
        ),
        migrations.CreateModel(
            name='FeeItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default='0.00', help_text='$', max_digits=8)),
                ('incremental_amount', models.BooleanField(default=False, help_text='When ticked, The amount will be the increase in the rate per meter')),
                ('admission_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.admissiontype')),
                ('age_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.agegroup')),
                ('fee_constructor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.feeconstructor')),
            ],
        ),
        migrations.CreateModel(
            name='FeeItemStickerReplacement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default='0.00', help_text='unit [$AU/Sticker]', max_digits=8)),
                ('date_of_enforcement', models.DateField(blank=True, null=True)),
                ('enabled', models.BooleanField(default=True)),
                ('incur_gst', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Fee (sticker replacement)',
                'verbose_name_plural': 'Fee (sticker replacement)',
            },
        ),
        migrations.CreateModel(
            name='FeeSeason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('application_type', models.ForeignKey(blank=True, limit_choices_to={'fee_by_fee_constructor': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.applicationtype')),
            ],
            options={
                'verbose_name': 'season',
            },
        ),
        migrations.CreateModel(
            name='GlobalSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(choices=[('dcv_permit_template_file', 'DcvPermit template file'), ('dcv_admission_template_file', 'DcvAdmission template file'), ('wla_template_file', 'Waiting List Allocation template file'), ('aap_template_file', 'Annual Admission Permit template file'), ('aup_template_file', 'Authorised User Permit template file'), ('ml_template_file', 'Mooring Licence template file'), ('ml_au_list_template_file', 'Mooring Licence Authorised User Summary template file'), ('minimum_vessel_length', 'Minimum vessel length'), ('minimum_mooring_vessel_length', 'Minimum mooring vessel length'), ('min_sticker_number_for_dcv_permit', 'Minimun sticker number for DCV Permit')], max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('_file', models.FileField(blank=True, null=True, upload_to='approval_permit_template')),
            ],
            options={
                'verbose_name_plural': 'Global Settings',
            },
        ),
        migrations.CreateModel(
            name='Mooring',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=True)),
                ('vessel_size_limit', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('vessel_draft_limit', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('vessel_beam_limit', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('vessel_weight_limit', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('mooring_bookings_id', models.IntegerField()),
                ('mooring_bookings_mooring_specification', models.IntegerField(choices=[(1, 'Rental Mooring'), (2, 'Private Mooring')])),
                ('mooring_bookings_bay_id', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'Moorings',
            },
        ),
        migrations.CreateModel(
            name='MooringBay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('mooring_bookings_id', models.IntegerField()),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Mooring Bays',
            },
        ),
        migrations.CreateModel(
            name='NumberOfDaysType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'Number of days Settings',
                'verbose_name_plural': 'Number of days Settings',
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisation', models.IntegerField()),
                ('delegates', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, size=None)),
                ('admin_pin_one', models.CharField(blank=True, max_length=50)),
                ('admin_pin_two', models.CharField(blank=True, max_length=50)),
                ('user_pin_one', models.CharField(blank=True, max_length=50)),
                ('user_pin_two', models.CharField(blank=True, max_length=50)),
                ('bpay_allowed', models.BooleanField(default=False, verbose_name='BPAY Allowed')),
                ('monthly_invoicing_allowed', models.BooleanField(default=False)),
                ('monthly_invoicing_period', models.SmallIntegerField(default=0, verbose_name='Monthly Invoicing Period (in #days from beginning of the following month)')),
                ('monthly_payment_due_period', models.SmallIntegerField(default=20, verbose_name='Monthly Payment Due Period (in #days from Invoicing Date)')),
                ('apply_application_discount', models.BooleanField(default=False)),
                ('application_discount', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('apply_licence_discount', models.BooleanField(default=False)),
                ('licence_discount', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('event_training_completed', models.BooleanField(default=False)),
                ('event_training_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationAccessGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('members', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, size=None)),
            ],
            options={
                'verbose_name_plural': 'Organisation access group',
            },
        ),
        migrations.CreateModel(
            name='OrganisationRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('abn', models.CharField(blank=True, max_length=50, null=True, verbose_name='ABN')),
                ('requester', models.IntegerField()),
                ('assigned_officer', models.IntegerField(blank=True, null=True)),
                ('identification', models.FileField(blank=True, max_length=512, null=True, upload_to='organisation/requests/%Y/%m/%d')),
                ('status', models.CharField(choices=[('with_assessor', 'With Assessor'), ('approved', 'Approved'), ('declined', 'Declined')], default='with_assessor', max_length=100)),
                ('lodgement_date', models.DateTimeField(auto_now_add=True)),
                ('role', models.CharField(choices=[('employee', 'Employee'), ('consultant', 'Consultant')], default='employee', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emailuser', models.IntegerField(unique=True)),
            ],
            options={
                'verbose_name_plural': 'Owners',
            },
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessor_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('comment_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('proposed_issuance_approval', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('customer_status', models.CharField(choices=[('draft', 'Draft'), ('with_assessor', 'Under Review'), ('with_approver', 'Under Review'), ('awaiting_endorsement', 'Awaiting Endorsement'), ('awaiting_documents', 'Awaiting Documents'), ('sticker_to_be_returned', 'Sticker to be Returned'), ('printing_sticker', 'Printing Sticker'), ('approved', 'Approved'), ('declined', 'Declined'), ('discarded', 'Discarded'), ('awaiting_payment', 'Awaiting Payment'), ('expired', 'Expired')], default='draft', max_length=40, verbose_name='Customer Status')),
                ('lodgement_number', models.CharField(blank=True, default='', max_length=9)),
                ('lodgement_sequence', models.IntegerField(blank=True, default=0)),
                ('lodgement_date', models.DateTimeField(blank=True, null=True)),
                ('proxy_applicant', models.IntegerField(blank=True, null=True)),
                ('submitter', models.IntegerField(blank=True, null=True)),
                ('assigned_officer', models.IntegerField(blank=True, null=True)),
                ('assigned_approver', models.IntegerField(blank=True, null=True)),
                ('processing_status', models.CharField(choices=[('draft', 'Draft'), ('with_assessor', 'With Assessor'), ('with_assessor_requirements', 'With Assessor (Requirements)'), ('with_approver', 'With Approver'), ('sticker_to_be_returned', 'Sticker to be Returned'), ('printing_sticker', 'Printing Sticker'), ('awaiting_endorsement', 'Awaiting Endorsement'), ('awaiting_documents', 'Awaiting Documents'), ('approved', 'Approved'), ('declined', 'Declined'), ('discarded', 'Discarded'), ('awaiting_payment', 'Awaiting Payment'), ('expired', 'Expired')], default='draft', max_length=40, verbose_name='Processing Status')),
                ('prev_processing_status', models.CharField(blank=True, max_length=40, null=True)),
                ('proposed_decline_status', models.BooleanField(default=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('approval_level', models.CharField(blank=True, max_length=255, null=True, verbose_name='Activity matrix approval level')),
                ('approval_comment', models.TextField(blank=True)),
                ('migrated', models.BooleanField(default=False)),
                ('rego_no', models.CharField(blank=True, max_length=200, null=True)),
                ('vessel_id', models.IntegerField(blank=True, null=True)),
                ('vessel_type', models.CharField(blank=True, choices=[('yacht', 'Yacht'), ('cabin_cruiser', 'Cabin Cruiser'), ('tender', 'Tender'), ('other', 'Other')], max_length=20)),
                ('vessel_name', models.CharField(blank=True, max_length=400)),
                ('vessel_length', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('vessel_draft', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('vessel_beam', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('vessel_weight', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('berth_mooring', models.CharField(blank=True, max_length=200)),
                ('dot_name', models.CharField(blank=True, max_length=200, null=True)),
                ('percentage', models.IntegerField(blank=True, null=True)),
                ('individual_owner', models.NullBooleanField()),
                ('company_ownership_percentage', models.IntegerField(blank=True, null=True)),
                ('company_ownership_name', models.CharField(blank=True, max_length=200, null=True)),
                ('insurance_choice', models.CharField(blank=True, choices=[('five_million', '$5 million Third Party Liability insurance cover - required for vessels of length less than 6.4 metres'), ('ten_million', '$10 million Third Party Liability insurance cover - required for vessels of length 6.4 metres or greater'), ('over_ten', 'over $10 million')], max_length=20)),
                ('silent_elector', models.NullBooleanField()),
                ('mooring_authorisation_preference', models.CharField(blank=True, choices=[('site_licensee', 'By a mooring site licensee for their mooring'), ('ria', 'By Rottnest Island Authority for a mooring allocated by the Authority')], max_length=20)),
                ('bay_preferences_numbered', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, null=True, size=None)),
                ('site_licensee_email', models.CharField(blank=True, max_length=200, null=True)),
                ('endorser_reminder_sent', models.BooleanField(default=False)),
                ('date_invited', models.DateField(blank=True, null=True)),
                ('invitee_reminder_sent', models.BooleanField(default=False)),
                ('temporary_document_collection_id', models.IntegerField(blank=True, null=True)),
                ('keep_existing_mooring', models.BooleanField(default=True)),
                ('keep_existing_vessel', models.BooleanField(default=True)),
                ('auto_approve', models.BooleanField(default=False)),
                ('null_vessel_on_create', models.BooleanField(default=True)),
                ('allocated_mooring', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ria_generated_proposal', to='mooringlicensing.mooring')),
                ('approval', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.approval')),
            ],
            options={
                'verbose_name': 'Application',
                'verbose_name_plural': 'Applications',
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProposalRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('text', models.TextField(blank=True)),
                ('officer', models.IntegerField(blank=True, null=True)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposalrequest_set', to='mooringlicensing.proposal')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False)),
                ('free_requirement', models.TextField(blank=True, null=True)),
                ('standard', models.BooleanField(default=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('recurrence', models.BooleanField(default=False)),
                ('recurrence_pattern', models.SmallIntegerField(choices=[(1, 'Weekly'), (2, 'Monthly'), (3, 'Yearly')], default=1)),
                ('recurrence_schedule', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('copied_for_renewal', models.BooleanField(default=False)),
                ('require_due_date', models.BooleanField(default=False)),
                ('copied_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.proposalrequirement')),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='mooringlicensing.proposal')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=30, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sticker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, default='', max_length=9)),
                ('status', models.CharField(choices=[('ready', 'Ready'), ('not_ready_yet', 'Not Ready Yet'), ('awaiting_printing', 'Awaiting Printing'), ('current', 'Current'), ('to_be_returned', 'To be Returned'), ('returned', 'Returned'), ('lost', 'Lost'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='ready', max_length=40)),
                ('printing_date', models.DateField(blank=True, null=True)),
                ('mailing_date', models.DateField(blank=True, null=True)),
                ('approval', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stickers', to='mooringlicensing.approval')),
                ('dcv_permit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stickers', to='mooringlicensing.dcvpermit')),
                ('fee_constructor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.feeconstructor')),
                ('fee_season', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.feeseason')),
                ('proposal_initiated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.proposal')),
            ],
            options={
                'ordering': ['-number'],
            },
        ),
        migrations.CreateModel(
            name='StickerActionFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('send_invoice', models.BooleanField(default=False)),
                ('confirmation_sent', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('expiry_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('payment_type', models.SmallIntegerField(choices=[(0, 'Internet booking'), (1, 'Reception booking'), (2, 'Black booking'), (3, 'Temporary reservation')], default=0)),
                ('cost', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('invoice_reference', models.CharField(blank=True, default='', max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StickerPrintedContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('type', models.CharField(choices=[('to', 'To'), ('cc', 'Cc'), ('bcc', 'Bcc')], max_length=255)),
                ('enabled', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='StickerPrintingBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.proposals.models.update_sticker_doc_filename)),
                ('emailed_datetime', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StickerPrintingContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('type', models.CharField(choices=[('to', 'To'), ('cc', 'Cc'), ('bcc', 'Bcc')], max_length=255)),
                ('enabled', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='StickerPrintingResponseEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_subject', models.CharField(blank=True, max_length=255, null=True)),
                ('email_body', models.TextField(blank=True, null=True)),
                ('email_date', models.CharField(blank=True, max_length=255, null=True)),
                ('email_from', models.CharField(blank=True, max_length=255, null=True)),
                ('email_message_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SystemMaintenance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
            ],
            options={
                'verbose_name_plural': 'System maintenance',
            },
        ),
        migrations.CreateModel(
            name='TemporaryDocumentCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='UserSystemSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.IntegerField(unique=True)),
            ],
            options={
                'verbose_name_plural': 'User System Settings',
            },
        ),
        migrations.CreateModel(
            name='Vessel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rego_no', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Vessels',
            },
        ),
        migrations.CreateModel(
            name='VesselOwnership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.IntegerField(blank=True, null=True)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('exported', models.BooleanField(default=False)),
                ('dot_name', models.CharField(blank=True, max_length=200, null=True)),
                ('company_ownership', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.companyownership')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.owner')),
                ('vessel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.vessel')),
            ],
            options={
                'verbose_name_plural': 'Vessel Details Ownership',
            },
        ),
        migrations.CreateModel(
            name='VesselSizeCategoryGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Vessel Size Category Group',
            },
        ),
        migrations.CreateModel(
            name='AnnualAdmissionApplication',
            fields=[
                ('proposal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.proposal')),
            ],
            bases=('mooringlicensing.proposal',),
        ),
        migrations.CreateModel(
            name='AnnualAdmissionPermit',
            fields=[
                ('approval', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.approval')),
            ],
            bases=('mooringlicensing.approval',),
        ),
        migrations.CreateModel(
            name='AuthorisedUserApplication',
            fields=[
                ('proposal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.proposal')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
            ],
            bases=('mooringlicensing.proposal',),
        ),
        migrations.CreateModel(
            name='AuthorisedUserPermit',
            fields=[
                ('approval', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.approval')),
            ],
            bases=('mooringlicensing.approval',),
        ),
        migrations.CreateModel(
            name='ComplianceRequest',
            fields=[
                ('proposalrequest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.proposalrequest')),
                ('reason', models.CharField(choices=[('outstanding', 'There are currently outstanding returns for the previous licence'), ('other', 'Other')], default='outstanding', max_length=30, verbose_name='Reason')),
            ],
            bases=('mooringlicensing.proposalrequest',),
        ),
        migrations.CreateModel(
            name='MooringLicence',
            fields=[
                ('approval', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.approval')),
            ],
            bases=('mooringlicensing.approval',),
        ),
        migrations.CreateModel(
            name='MooringLicenceApplication',
            fields=[
                ('proposal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.proposal')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
            ],
            bases=('mooringlicensing.proposal',),
        ),
        migrations.CreateModel(
            name='PreviewTempApproval',
            fields=[
                ('approval_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.approval')),
            ],
            bases=('mooringlicensing.approval',),
        ),
        migrations.CreateModel(
            name='WaitingListAllocation',
            fields=[
                ('approval', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.approval')),
            ],
            bases=('mooringlicensing.approval',),
        ),
        migrations.CreateModel(
            name='WaitingListApplication',
            fields=[
                ('proposal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.proposal')),
            ],
            bases=('mooringlicensing.proposal',),
        ),
        migrations.CreateModel(
            name='WrittenProofDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to='')),
                ('input_name', models.CharField(blank=True, max_length=255, null=True)),
                ('can_delete', models.BooleanField(default=True)),
                ('can_hide', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='written_proof_documents', to='mooringlicensing.proposal')),
            ],
            options={
                'verbose_name': 'Written Proof Document',
            },
        ),
        migrations.CreateModel(
            name='WaitingListOfferDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to='')),
                ('input_name', models.CharField(blank=True, max_length=255, null=True)),
                ('can_delete', models.BooleanField(default=True)),
                ('can_hide', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
                ('approval', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waiting_list_offer_documents', to='mooringlicensing.approval')),
            ],
            options={
                'verbose_name': 'Waiting List Offer Documents',
            },
        ),
        migrations.CreateModel(
            name='VesselSizeCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_size', models.DecimalField(decimal_places=2, default='0.00', help_text='unit [m]', max_digits=8)),
                ('include_start_size', models.BooleanField(default=True)),
                ('null_vessel', models.BooleanField(default=False)),
                ('vessel_size_category_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vessel_size_categories', to='mooringlicensing.vesselsizecategorygroup')),
            ],
            options={
                'verbose_name_plural': 'Vessel Size Categories',
            },
        ),
        migrations.CreateModel(
            name='VesselRegistrationDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to='')),
                ('input_name', models.CharField(blank=True, max_length=255, null=True)),
                ('can_delete', models.BooleanField(default=True)),
                ('can_hide', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
                ('vessel_ownership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vessel_registration_documents', to='mooringlicensing.vesselownership')),
            ],
            options={
                'verbose_name': 'Vessel Registration Papers',
            },
        ),
        migrations.CreateModel(
            name='VesselOwnershipOnApproval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('end_date', models.DateField(blank=True, null=True)),
                ('approval', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.approval')),
                ('vessel_ownership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.vesselownership')),
            ],
            options={
                'unique_together': {('vessel_ownership', 'approval')},
            },
        ),
        migrations.CreateModel(
            name='VesselDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vessel_type', models.CharField(choices=[('yacht', 'Yacht'), ('cabin_cruiser', 'Cabin Cruiser'), ('tender', 'Tender'), ('other', 'Other')], max_length=20)),
                ('vessel_name', models.CharField(max_length=400)),
                ('vessel_length', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('vessel_draft', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('vessel_beam', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('vessel_weight', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('berth_mooring', models.CharField(blank=True, max_length=200)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('exported', models.BooleanField(default=False)),
                ('vessel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.vessel')),
            ],
            options={
                'verbose_name_plural': 'Vessel Details',
            },
        ),
        migrations.AddField(
            model_name='vessel',
            name='blocking_owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blocked_vessel', to='mooringlicensing.vesselownership'),
        ),
        migrations.CreateModel(
            name='TemporaryDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=255, upload_to='')),
                ('temp_document_collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mooringlicensing.temporarydocumentcollection')),
            ],
        ),
        migrations.CreateModel(
            name='StickerPrintingResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.proposals.models.update_sticker_response_doc_filename)),
                ('processed', models.BooleanField(default=False)),
                ('no_errors_when_process', models.NullBooleanField(default=None)),
                ('sticker_printing_response_email', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.stickerprintingresponseemail')),
            ],
        ),
        migrations.CreateModel(
            name='StickerActionDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(blank=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('date_of_lost_sticker', models.DateField(blank=True, null=True)),
                ('date_of_returned_sticker', models.DateField(blank=True, null=True)),
                ('action', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.IntegerField(blank=True, null=True)),
                ('sticker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sticker_action_details', to='mooringlicensing.sticker')),
                ('sticker_action_fee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sticker_action_details', to='mooringlicensing.stickeractionfee')),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.AddField(
            model_name='sticker',
            name='sticker_printing_batch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.stickerprintingbatch'),
        ),
        migrations.AddField(
            model_name='sticker',
            name='sticker_printing_response',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.stickerprintingresponse'),
        ),
        migrations.AddField(
            model_name='sticker',
            name='sticker_to_replace',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.sticker'),
        ),
        migrations.AddField(
            model_name='sticker',
            name='vessel_ownership',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.vesselownership'),
        ),
        migrations.CreateModel(
            name='SignedLicenceAgreementDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to='')),
                ('input_name', models.CharField(blank=True, max_length=255, null=True)),
                ('can_delete', models.BooleanField(default=True)),
                ('can_hide', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signed_licence_agreement_documents', to='mooringlicensing.proposal')),
            ],
            options={
                'verbose_name': 'Signed Licence Agreement',
            },
        ),
        migrations.CreateModel(
            name='RequirementDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.proposals.models.update_requirement_doc_filename)),
                ('input_name', models.CharField(blank=True, max_length=255, null=True)),
                ('can_delete', models.BooleanField(default=True)),
                ('visible', models.BooleanField(default=True)),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirement_documents', to='mooringlicensing.proposalrequirement')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RenewalDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(upload_to=mooringlicensing.components.approvals.models.update_approval_doc_filename)),
                ('can_delete', models.BooleanField(default=True)),
                ('approval', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='renewal_documents', to='mooringlicensing.approval')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalUserAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('who', models.IntegerField(blank=True, null=True)),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('what', models.TextField()),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to='mooringlicensing.proposal')),
            ],
            options={
                'ordering': ('-when',),
            },
        ),
        migrations.CreateModel(
            name='ProposalStandardRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('code', models.CharField(max_length=10, unique=True)),
                ('obsolete', models.BooleanField(default=False)),
                ('participant_number_required', models.BooleanField(default=False)),
                ('default', models.BooleanField(default=False)),
                ('application_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.applicationtype')),
            ],
            options={
                'verbose_name': 'Application Standard Requirement',
                'verbose_name_plural': 'Application Standard Requirements',
            },
        ),
        migrations.AddField(
            model_name='proposalrequirement',
            name='standard_requirement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.proposalstandardrequirement'),
        ),
        migrations.CreateModel(
            name='ProposalDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.proposals.models.update_proposal_doc_filename)),
                ('input_name', models.CharField(blank=True, max_length=255, null=True)),
                ('can_delete', models.BooleanField(default=True)),
                ('can_hide', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mooringlicensing.proposal')),
            ],
            options={
                'verbose_name': 'Application Document',
            },
        ),
        migrations.CreateModel(
            name='ProposalDeclinedDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('officer', models.IntegerField(blank=True, null=True)),
                ('reason', models.TextField(blank=True)),
                ('cc_email', models.TextField(null=True)),
                ('proposal', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.proposal')),
            ],
        ),
        migrations.AddField(
            model_name='proposal',
            name='approval_level_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approval_level_document', to='mooringlicensing.proposaldocument'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='fee_season',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.feeseason'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='listed_moorings',
            field=models.ManyToManyField(related_name='listed_on_proposals', to='mooringlicensing.Mooring'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='listed_vessels',
            field=models.ManyToManyField(related_name='listed_on_proposals', to='mooringlicensing.VesselOwnership'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='mooring',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.mooring'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='org_applicant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='org_applications', to='mooringlicensing.organisation'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='preferred_bay',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.mooringbay'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='previous_application',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='succeeding_proposals', to='mooringlicensing.proposal'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='proposal_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.proposaltype'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='vessel_details',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.vesseldetails'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='vessel_ownership',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.vesselownership'),
        ),
        migrations.CreateModel(
            name='ProofOfIdentityDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to='')),
                ('input_name', models.CharField(blank=True, max_length=255, null=True)),
                ('can_delete', models.BooleanField(default=True)),
                ('can_hide', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proof_of_identity_documents', to='mooringlicensing.proposal')),
            ],
            options={
                'verbose_name': 'Proof Of Identity',
            },
        ),
        migrations.AddField(
            model_name='owner',
            name='vessels',
            field=models.ManyToManyField(through='mooringlicensing.VesselOwnership', to='mooringlicensing.Vessel'),
        ),
        migrations.CreateModel(
            name='OrganisationRequestUserAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('who', models.IntegerField()),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('what', models.TextField()),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to='mooringlicensing.organisationrequest')),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationRequestDeclinedDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('officer', models.IntegerField()),
                ('reason', models.TextField(blank=True)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.organisationrequest')),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('who', models.IntegerField()),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('what', models.TextField()),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to='mooringlicensing.organisation')),
            ],
        ),
        migrations.CreateModel(
            name='OracleCodeItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, default='T1 EXEMPT', max_length=50, null=True)),
                ('date_of_enforcement', models.DateField(blank=True, null=True)),
                ('application_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='oracle_code_items', to='mooringlicensing.applicationtype')),
            ],
        ),
        migrations.CreateModel(
            name='NumberOfPeople',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('admission_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.admissiontype')),
                ('age_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.agegroup')),
                ('dcv_admission_arrival', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.dcvadmissionarrival')),
            ],
        ),
        migrations.CreateModel(
            name='NumberOfDaysSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_days', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('date_of_enforcement', models.DateField(blank=True, null=True)),
                ('number_of_days_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='mooringlicensing.numberofdaystype')),
            ],
            options={
                'ordering': ['-date_of_enforcement'],
            },
        ),
        migrations.CreateModel(
            name='MooringUserAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('who', models.IntegerField()),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('what', models.TextField()),
                ('mooring', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to='mooringlicensing.mooring')),
            ],
            options={
                'ordering': ('-when',),
            },
        ),
        migrations.CreateModel(
            name='MooringReportDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to='')),
                ('input_name', models.CharField(blank=True, max_length=255, null=True)),
                ('can_delete', models.BooleanField(default=True)),
                ('can_hide', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mooring_report_documents', to='mooringlicensing.proposal')),
            ],
            options={
                'verbose_name': 'Mooring Report Document',
            },
        ),
        migrations.CreateModel(
            name='MooringOnApproval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_licensee', models.BooleanField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('approval', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.approval')),
                ('mooring', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.mooring')),
                ('sticker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.sticker')),
            ],
            options={
                'unique_together': {('mooring', 'approval')},
            },
        ),
        migrations.AddField(
            model_name='mooring',
            name='mooring_bay',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.mooringbay'),
        ),
        migrations.CreateModel(
            name='InsuranceCertificateDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to='')),
                ('input_name', models.CharField(blank=True, max_length=255, null=True)),
                ('can_delete', models.BooleanField(default=True)),
                ('can_hide', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurance_certificate_documents', to='mooringlicensing.proposal')),
            ],
            options={
                'verbose_name': 'Insurance Certificate Documents',
            },
        ),
        migrations.CreateModel(
            name='HullIdentificationNumberDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to='')),
                ('input_name', models.CharField(blank=True, max_length=255, null=True)),
                ('can_delete', models.BooleanField(default=True)),
                ('can_hide', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hull_identification_number_documents', to='mooringlicensing.proposal')),
            ],
            options={
                'verbose_name': 'Hull Identification Number Documents',
            },
        ),
        migrations.CreateModel(
            name='HelpPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', ckeditor.fields.RichTextField()),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('help_type', models.SmallIntegerField(choices=[(1, 'External'), (2, 'Internal')], default=1, verbose_name='Help Type')),
                ('version', models.SmallIntegerField(default=1)),
            ],
            options={
                'unique_together': {('help_type', 'version')},
            },
        ),
        migrations.CreateModel(
            name='FeePeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('fee_season', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fee_periods', to='mooringlicensing.feeseason')),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='FeeItemApplicationFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_to_be_paid', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=8, null=True)),
                ('amount_paid', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=8, null=True)),
                ('application_fee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.applicationfee')),
                ('fee_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.feeitem')),
                ('vessel_details', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.vesseldetails')),
            ],
        ),
        migrations.AddField(
            model_name='feeitem',
            name='fee_period',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.feeperiod'),
        ),
        migrations.AddField(
            model_name='feeitem',
            name='proposal_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.proposaltype'),
        ),
        migrations.AddField(
            model_name='feeitem',
            name='vessel_size_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.vesselsizecategory'),
        ),
        migrations.AddField(
            model_name='feeconstructor',
            name='fee_season',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='application_type', chained_model_field='application_type', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fee_constructors', to='mooringlicensing.feeseason'),
        ),
        migrations.AddField(
            model_name='feeconstructor',
            name='vessel_size_category_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fee_constructors', to='mooringlicensing.vesselsizecategorygroup'),
        ),
        migrations.CreateModel(
            name='ElectoralRollDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to='')),
                ('input_name', models.CharField(blank=True, max_length=255, null=True)),
                ('can_delete', models.BooleanField(default=True)),
                ('can_hide', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='electoral_roll_documents', to='mooringlicensing.proposal')),
            ],
            options={
                'verbose_name': 'Electoral Roll Document',
            },
        ),
        migrations.CreateModel(
            name='DcvVessel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rego_no', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('vessel_name', models.CharField(blank=True, max_length=400)),
                ('dcv_organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.dcvorganisation')),
            ],
        ),
        migrations.CreateModel(
            name='DcvPermitFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('send_invoice', models.BooleanField(default=False)),
                ('confirmation_sent', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('expiry_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('payment_type', models.SmallIntegerField(choices=[(0, 'Internet booking'), (1, 'Reception booking'), (2, 'Black booking'), (3, 'Temporary reservation')], default=0)),
                ('cost', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('invoice_reference', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('dcv_permit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='dcv_permit_fees', to='mooringlicensing.dcvpermit')),
                ('fee_items', models.ManyToManyField(related_name='dcv_permit_fees', to='mooringlicensing.FeeItem')),
            ],
        ),
        migrations.CreateModel(
            name='DcvPermitDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.approvals.models.update_dcv_permit_doc_filename)),
                ('can_delete', models.BooleanField(default=False)),
                ('dcv_permit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='permits', to='mooringlicensing.dcvpermit')),
            ],
        ),
        migrations.AddField(
            model_name='dcvpermit',
            name='dcv_vessel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dcv_permits', to='mooringlicensing.dcvvessel'),
        ),
        migrations.AddField(
            model_name='dcvpermit',
            name='fee_season',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dcv_permits', to='mooringlicensing.feeseason'),
        ),
        migrations.CreateModel(
            name='DcvAdmissionFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('send_invoice', models.BooleanField(default=False)),
                ('confirmation_sent', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('expiry_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('payment_type', models.SmallIntegerField(choices=[(0, 'Internet booking'), (1, 'Reception booking'), (2, 'Black booking'), (3, 'Temporary reservation')], default=0)),
                ('cost', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('invoice_reference', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('dcv_admission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='dcv_admission_fees', to='mooringlicensing.dcvadmission')),
                ('fee_items', models.ManyToManyField(related_name='dcv_admission_fees', to='mooringlicensing.FeeItem')),
            ],
        ),
        migrations.CreateModel(
            name='DcvAdmissionDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.approvals.models.update_dcv_admission_doc_filename)),
                ('can_delete', models.BooleanField(default=False)),
                ('dcv_admission', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='admissions', to='mooringlicensing.dcvadmission')),
            ],
        ),
        migrations.AddField(
            model_name='dcvadmissionarrival',
            name='fee_constructor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='dcv_admission_arrivals', to='mooringlicensing.feeconstructor'),
        ),
        migrations.AddField(
            model_name='dcvadmissionarrival',
            name='fee_season',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.feeseason'),
        ),
        migrations.AddField(
            model_name='dcvadmission',
            name='dcv_vessel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dcv_admissions', to='mooringlicensing.dcvvessel'),
        ),
        migrations.CreateModel(
            name='ComplianceUserAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('who', models.IntegerField()),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('what', models.TextField()),
                ('compliance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to='mooringlicensing.compliance')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.compliances.models.update_proposal_complaince_filename)),
                ('can_delete', models.BooleanField(default=True)),
                ('compliance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mooringlicensing.compliance')),
            ],
        ),
        migrations.AddField(
            model_name='compliance',
            name='proposal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='compliances', to='mooringlicensing.proposal'),
        ),
        migrations.AddField(
            model_name='compliance',
            name='requirement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compliance_requirement', to='mooringlicensing.proposalrequirement'),
        ),
        migrations.AddField(
            model_name='companyownership',
            name='blocking_proposal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.proposal'),
        ),
        migrations.AddField(
            model_name='companyownership',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.company'),
        ),
        migrations.AddField(
            model_name='companyownership',
            name='vessel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.vessel'),
        ),
        migrations.AddField(
            model_name='company',
            name='vessels',
            field=models.ManyToManyField(through='mooringlicensing.CompanyOwnership', to='mooringlicensing.Vessel'),
        ),
        migrations.CreateModel(
            name='AuthorisedUserSummaryDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.approvals.models.update_approval_doc_filename)),
                ('approval', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorised_user_summary_documents', to='mooringlicensing.approval')),
            ],
        ),
        migrations.CreateModel(
            name='ApprovalUserAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('who', models.IntegerField(blank=True, null=True)),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('what', models.TextField()),
                ('approval', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='action_logs', to='mooringlicensing.approval')),
            ],
            options={
                'ordering': ('-when',),
            },
        ),
        migrations.CreateModel(
            name='ApprovalHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(blank=True, max_length=100, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('approval', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.approval')),
                ('approval_letter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.approvaldocument')),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approval_history_records', to='mooringlicensing.proposal')),
                ('stickers', models.ManyToManyField(to='mooringlicensing.Sticker')),
                ('vessel_ownership', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.vesselownership')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='approval',
            name='authorised_user_summary_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approvals', to='mooringlicensing.authorisedusersummarydocument'),
        ),
        migrations.AddField(
            model_name='approval',
            name='cover_letter_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cover_letter_document', to='mooringlicensing.approvaldocument'),
        ),
        migrations.AddField(
            model_name='approval',
            name='current_proposal',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approvals', to='mooringlicensing.proposal'),
        ),
        migrations.AddField(
            model_name='approval',
            name='licence_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='licence_document', to='mooringlicensing.approvaldocument'),
        ),
        migrations.AddField(
            model_name='approval',
            name='moorings',
            field=models.ManyToManyField(through='mooringlicensing.MooringOnApproval', to='mooringlicensing.Mooring'),
        ),
        migrations.AddField(
            model_name='approval',
            name='org_applicant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='org_approvals', to='mooringlicensing.organisation'),
        ),
        migrations.AddField(
            model_name='approval',
            name='renewal_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='renewal_document', to='mooringlicensing.renewaldocument'),
        ),
        migrations.AddField(
            model_name='approval',
            name='replaced_by',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replace', to='mooringlicensing.approval'),
        ),
        migrations.AddField(
            model_name='approval',
            name='vessel_ownerships',
            field=models.ManyToManyField(through='mooringlicensing.VesselOwnershipOnApproval', to='mooringlicensing.VesselOwnership'),
        ),
        migrations.AddField(
            model_name='applicationfee',
            name='fee_items',
            field=models.ManyToManyField(related_name='application_fees', through='mooringlicensing.FeeItemApplicationFee', to='mooringlicensing.FeeItem'),
        ),
        migrations.AddField(
            model_name='applicationfee',
            name='proposal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='application_fees', to='mooringlicensing.proposal'),
        ),
        migrations.CreateModel(
            name='VesselLogEntry',
            fields=[
                ('communicationslogentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.communicationslogentry')),
                ('vessel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comms_logs', to='mooringlicensing.vessel')),
            ],
            bases=('mooringlicensing.communicationslogentry',),
        ),
        migrations.CreateModel(
            name='VesselLogDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.proposals.models.update_vessel_comms_log_filename)),
                ('log_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mooringlicensing.vessellogentry')),
            ],
        ),
        migrations.CreateModel(
            name='UserDelegation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.IntegerField()),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooringlicensing.organisation')),
            ],
            options={
                'unique_together': {('organisation', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ProposalLogEntry',
            fields=[
                ('communicationslogentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.communicationslogentry')),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comms_logs', to='mooringlicensing.proposal')),
            ],
            bases=('mooringlicensing.communicationslogentry',),
        ),
        migrations.CreateModel(
            name='ProposalLogDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.proposals.models.update_proposal_comms_log_filename)),
                ('log_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mooringlicensing.proposallogentry')),
            ],
        ),
        migrations.AddField(
            model_name='proposal',
            name='waiting_list_allocation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ria_generated_proposal', to='mooringlicensing.waitinglistallocation'),
        ),
        migrations.CreateModel(
            name='OrganisationRequestLogEntry',
            fields=[
                ('communicationslogentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.communicationslogentry')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comms_logs', to='mooringlicensing.organisationrequest')),
            ],
            bases=('mooringlicensing.communicationslogentry',),
        ),
        migrations.CreateModel(
            name='OrganisationRequestLogDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
        #        ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.organisations.models.update_organisation_request_comms_log_filename)),
                ('log_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mooringlicensing.organisationrequestlogentry')),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationLogEntry',
            fields=[
                ('communicationslogentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.communicationslogentry')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comms_logs', to='mooringlicensing.organisation')),
            ],
            bases=('mooringlicensing.communicationslogentry',),
        ),
        migrations.CreateModel(
            name='OrganisationLogDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
        #        ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.organisations.models.update_organisation_comms_log_filename)),
                ('log_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mooringlicensing.organisationlogentry')),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending'), ('active', 'Active'), ('declined', 'Declined'), ('unlinked', 'Unlinked'), ('suspended', 'Suspended')], default='draft', max_length=40, verbose_name='Status')),
                ('user_role', models.CharField(choices=[('organisation_admin', 'Organisation Admin'), ('organisation_user', 'Organisation User'), ('consultant', 'Consultant')], default='organisation_user', max_length=40, verbose_name='Role')),
                ('is_admin', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=254)),
                ('first_name', models.CharField(max_length=128, verbose_name='Given name(s)')),
                ('last_name', models.CharField(max_length=128)),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='phone number')),
                ('mobile_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='mobile number')),
                ('fax_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='fax number')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='mooringlicensing.organisation')),
            ],
            options={
                'unique_together': {('organisation', 'email')},
            },
        ),
        migrations.CreateModel(
            name='MooringLogEntry',
            fields=[
                ('communicationslogentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.communicationslogentry')),
                ('mooring', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comms_logs', to='mooringlicensing.mooring')),
            ],
            bases=('mooringlicensing.communicationslogentry',),
        ),
        migrations.CreateModel(
            name='MooringLogDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.proposals.models.update_mooring_comms_log_filename)),
                ('log_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mooringlicensing.mooringlogentry')),
            ],
        ),
        migrations.AddField(
            model_name='mooring',
            name='mooring_licence',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mooring', to='mooringlicensing.mooringlicence'),
        ),
        migrations.CreateModel(
            name='ComplianceLogEntry',
            fields=[
                ('communicationslogentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.communicationslogentry')),
                ('compliance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comms_logs', to='mooringlicensing.compliance')),
            ],
            bases=('mooringlicensing.communicationslogentry',),
        ),
        migrations.CreateModel(
            name='ComplianceLogDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, upload_to=mooringlicensing.components.compliances.models.update_compliance_comms_log_filename)),
                ('log_entry', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documents', to='mooringlicensing.compliancelogentry')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceAmendmentRequest',
            fields=[
                ('comprequest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.comprequest')),
                ('status', models.CharField(choices=[('requested', 'Requested'), ('amended', 'Amended')], default='requested', max_length=30, verbose_name='Status')),
                ('reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.complianceamendmentreason')),
            ],
            bases=('mooringlicensing.comprequest',),
        ),
        migrations.CreateModel(
            name='ApprovalLogEntry',
            fields=[
                ('communicationslogentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.communicationslogentry')),
                ('approval', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comms_logs', to='mooringlicensing.approval')),
            ],
            bases=('mooringlicensing.communicationslogentry',),
        ),
        migrations.CreateModel(
            name='ApprovalLogDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(max_length=512, null=True, upload_to=mooringlicensing.components.approvals.models.update_approval_comms_log_filename)),
                ('log_entry', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mooringlicensing.approvallogentry')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='approval',
            unique_together={('lodgement_number', 'issue_date')},
        ),
        migrations.CreateModel(
            name='AmendmentRequest',
            fields=[
                ('proposalrequest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mooringlicensing.proposalrequest')),
                ('status', models.CharField(choices=[('requested', 'Requested'), ('amended', 'Amended')], default='requested', max_length=30, verbose_name='Status')),
                ('reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mooringlicensing.amendmentreason')),
            ],
            bases=('mooringlicensing.proposalrequest',),
        ),
    ]
